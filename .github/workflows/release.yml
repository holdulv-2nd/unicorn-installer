name: Build & Release Unicorn Installer

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Unicorn Installer ${{ github.ref_name }}
          skipIfReleaseExists: true
          makeLatest: legacy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node: [20.x]
      fail-fast: false
    
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Electron App
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      
      # Upload Windows artifacts
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: |
            dist/*.exe
            dist/*.msi
          allowUpdates: true
          omitBody: true
          omitName: true
          makeLatest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Upload Linux artifacts
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: |
            dist/*.AppImage
            dist/*.deb
          allowUpdates: true
          omitBody: true
          omitName: true
          makeLatest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Upload macOS artifacts
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: dist/*.dmg
          allowUpdates: true
          omitBody: true
          omitName: true
          makeLatest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}